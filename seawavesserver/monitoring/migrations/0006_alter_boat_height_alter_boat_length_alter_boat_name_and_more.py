# Generated by Django 4.0.5 on 2022-07-04 12:44

import datetime
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('monitoring', '0005_setting_post_rate_alter_bulletin_available_until'),
    ]

    operations = [
        migrations.AlterField(
            model_name='boat',
            name='height',
            field=models.FloatField(help_text='(in meters)', validators=[django.core.validators.MinValueValidator(0)], verbose_name="Boat's Height"),
        ),
        migrations.AlterField(
            model_name='boat',
            name='length',
            field=models.FloatField(help_text='(in meters)', validators=[django.core.validators.MinValueValidator(0)], verbose_name="Boat's Length"),
        ),
        migrations.AlterField(
            model_name='boat',
            name='name',
            field=models.CharField(max_length=100, verbose_name="Boat's Name"),
        ),
        migrations.AlterField(
            model_name='boat',
            name='width',
            field=models.FloatField(help_text='(in meters)', validators=[django.core.validators.MinValueValidator(0)], verbose_name="Boat's Width"),
        ),
        migrations.AlterField(
            model_name='bulletin',
            name='available_until',
            field=models.DateField(validators=[django.core.validators.MinValueValidator(datetime.date(2022, 7, 4))], verbose_name='Available Until'),
        ),
        migrations.AlterField(
            model_name='record',
            name='accel_x',
            field=models.FloatField(help_text='(in meters per second)', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Acceleration-X'),
        ),
        migrations.AlterField(
            model_name='record',
            name='accel_y',
            field=models.FloatField(help_text='(in meters per second)', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Acceleration-Y'),
        ),
        migrations.AlterField(
            model_name='record',
            name='accel_z',
            field=models.FloatField(help_text='(in meters per second)', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Acceleration-Z'),
        ),
        migrations.AlterField(
            model_name='record',
            name='altitude',
            field=models.FloatField(help_text='(in meters)', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Altitude'),
        ),
        migrations.AlterField(
            model_name='record',
            name='gyro_x',
            field=models.FloatField(help_text='(in degrees per second)', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Gyroscope-X (Yaw Rate)'),
        ),
        migrations.AlterField(
            model_name='record',
            name='gyro_y',
            field=models.FloatField(help_text='(in degrees per second)', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Gyroscope-Y (Roll Rate)'),
        ),
        migrations.AlterField(
            model_name='record',
            name='gyro_z',
            field=models.FloatField(help_text='(in degrees per second)', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Gyroscope-Z (Pitch Rate)'),
        ),
        migrations.AlterField(
            model_name='record',
            name='heading_angle',
            field=models.FloatField(help_text='(in degrees)', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Heading Angle'),
        ),
        migrations.AlterField(
            model_name='record',
            name='latitude',
            field=models.FloatField(help_text='(in degrees)', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Latitude'),
        ),
        migrations.AlterField(
            model_name='record',
            name='longitude',
            field=models.FloatField(help_text='(in degrees)', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Longitude'),
        ),
        migrations.AlterField(
            model_name='record',
            name='mag_x',
            field=models.FloatField(help_text='(in micro-Tesla)', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Magnetometer-X'),
        ),
        migrations.AlterField(
            model_name='record',
            name='mag_y',
            field=models.FloatField(help_text='(in micro-Tesla)', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Magnetometer-Y'),
        ),
        migrations.AlterField(
            model_name='record',
            name='mag_z',
            field=models.FloatField(help_text='(in micro-Tesla)', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Magnetometer-Z'),
        ),
        migrations.AlterField(
            model_name='record',
            name='pitch_angle',
            field=models.FloatField(help_text='(in degrees)', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Pitch Angle'),
        ),
        migrations.AlterField(
            model_name='record',
            name='roll_angle',
            field=models.FloatField(help_text='(in degrees)', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Roll Angle'),
        ),
        migrations.AlterUniqueTogether(
            name='boat',
            unique_together={('name', 'owner')},
        ),
    ]
